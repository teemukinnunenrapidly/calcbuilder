# Task ID: 4
# Title: Implement Authentication with Supabase Auth
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Set up authentication system using Supabase Auth with email/password and configure Resend for email delivery.
# Details:
Configure Supabase Auth with email/password authentication. Set up Resend email service integration for transactional emails. Create Resend account and obtain API key. Configure Supabase to use Resend as the email provider through custom SMTP settings or Edge Functions. Set up email templates for authentication flows (verification, password reset, welcome emails). Create React context for authentication state management. Implement protected routes using React Router. Create login, registration, password reset, and email verification pages. Implement JWT token handling and refresh logic. Create user profile management page. Set up role-based access control for different user types (Platform Administrator, Client Administrator) as defined in section 3 of the PRD. Configure email sender domain and verify DNS records for email deliverability.

# Test Strategy:
Test user registration with email verification - confirm email is received via Resend. Verify login functionality with email/password. Test password reset flow and confirm reset email delivery. Verify email templates render correctly with proper branding. Test email deliverability and check spam scores. Verify protected routes redirect unauthenticated users to login. Test token refresh mechanism. Verify role-based access control restricts access appropriately. Test user profile updates. Monitor Resend dashboard for email delivery success rates. Test email sending in both development (using Resend test mode) and production environments.

# Subtasks:
## 1. Setup Email Templates Infrastructure [pending]
### Dependencies: None
### Description: Create folder structure and basic infrastructure for email templates
### Details:
Create src/emails/templates directory, install React Email dependencies, create basic utilities and type definitions for email template system

## 2. Create Welcome Email Template [pending]
### Dependencies: 4.1
### Description: Create welcome email template for new users
### Details:
Create WelcomeEmail.tsx React Email template with CalcBuilder Pro branding and support for three languages (Finnish, English, Swedish)

## 3. Create Email Verification Template [pending]
### Dependencies: 4.1
### Description: Create email verification template
### Details:
Create EmailVerificationEmail.tsx template with verification link and support for three languages (Finnish, English, Swedish)

## 4. Create Password Reset Template [pending]
### Dependencies: 4.1
### Description: Create password reset email template
### Details:
Create PasswordResetEmail.tsx template with reset link and support for three languages (Finnish, English, Swedish)

## 5. Create Email Templates Test Page [pending]
### Dependencies: 4.2, 4.3, 4.4
### Description: Create test page for viewing email templates
### Details:
Create Next.js page where all email templates can be tested with different languages and parameters

## 6. Integrate Templates with Resend [pending]
### Dependencies: 4.5
### Description: Integrate email templates with Resend service
### Details:
Create email renderer utilities, test Resend integration, ensure templates are sent correctly through Resend API

