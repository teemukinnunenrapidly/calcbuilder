import { render } from '@react-email/components';
import { Resend } from 'resend';
import { EmailVerificationEmail, PasswordResetEmail, WelcomeEmail } from './index';
import type { EmailVerificationProps, PasswordResetProps, WelcomeEmailProps } from './types';

// Initialize Resend client
const resend = new Resend(process.env['RESEND_API_KEY']);

// Email renderer utility class
export class EmailRenderer {
  /**
   * Render a React Email template to HTML string
   */
  static async renderTemplate(template: React.ReactElement): Promise<string> {
    try {
      return await render(template);
    } catch (error) {
      console.error('Error rendering email template:', error);
      throw new Error(`Failed to render email template: ${error}`);
    }
  }

  /**
   * Send welcome email using Resend
   */
  static async sendWelcomeEmail(props: WelcomeEmailProps) {
    try {
      const html = await this.renderTemplate(WelcomeEmail(props));

      const result = await resend.emails.send({
        from: 'CalcBuilder Pro <noreply@calcbuilder.com>',
        to: [props.userEmail],
        subject: this.getWelcomeEmailSubject(props.language),
        html,
        text: this.generateTextVersion(props),
      });

      return result;
    } catch (error) {
      console.error('Error sending welcome email:', error);
      throw new Error(`Failed to send welcome email: ${error}`);
    }
  }

  /**
   * Send email verification email using Resend
   */
  static async sendVerificationEmail(props: EmailVerificationProps) {
    try {
      const html = await this.renderTemplate(EmailVerificationEmail(props));

      const result = await resend.emails.send({
        from: 'CalcBuilder Pro <noreply@calcbuilder.com>',
        to: [props.userEmail],
        subject: this.getVerificationEmailSubject(props.language),
        html,
        text: this.generateVerificationTextVersion(props),
      });

      return result;
    } catch (error) {
      console.error('Error sending verification email:', error);
      throw new Error(`Failed to send verification email: ${error}`);
    }
  }

  /**
   * Send password reset email using Resend
   */
  static async sendPasswordResetEmail(props: PasswordResetProps) {
    try {
      const html = await this.renderTemplate(PasswordResetEmail(props));

      const result = await resend.emails.send({
        from: 'CalcBuilder Pro <noreply@calcbuilder.com>',
        to: [props.userEmail],
        subject: this.getPasswordResetSubject(props.language),
        html,
        text: this.generatePasswordResetTextVersion(props),
      });

      return result;
    } catch (error) {
      console.error('Error sending password reset email:', error);
      throw new Error(`Failed to send password reset email: ${error}`);
    }
  }

  /**
   * Get localized subject for welcome email
   */
  private static getWelcomeEmailSubject(language: string = 'fi'): string {
    const subjects = {
      fi: 'Tervetuloa CalcBuilder Pro:hon!',
      en: 'Welcome to CalcBuilder Pro!',
      sv: 'V칛lkommen till CalcBuilder Pro!',
    };
    return subjects[language as keyof typeof subjects] || subjects.fi;
  }

  /**
   * Get localized subject for verification email
   */
  private static getVerificationEmailSubject(language: string = 'fi'): string {
    const subjects = {
      fi: 'Vahvista s칛hk칬postiosoitteesi - CalcBuilder Pro',
      en: 'Verify Your Email Address - CalcBuilder Pro',
      sv: 'Verifiera din e-postadress - CalcBuilder Pro',
    };
    return subjects[language as keyof typeof subjects] || subjects.fi;
  }

  /**
   * Get localized subject for password reset email
   */
  private static getPasswordResetSubject(language: string = 'fi'): string {
    const subjects = {
      fi: 'Salasanan nollaus - CalcBuilder Pro',
      en: 'Password Reset - CalcBuilder Pro',
      sv: 'L칬senords친terst칛llning - CalcBuilder Pro',
    };
    return subjects[language as keyof typeof subjects] || subjects.fi;
  }

  /**
   * Generate plain text version of welcome email
   */
  private static generateTextVersion(props: WelcomeEmailProps): string {
    const { userName, language = 'fi' } = props;

    const content = {
      fi: {
        greeting: `Hei ${userName}!`,
        body: 'Olemme iloisia, ett칛 liityit CalcBuilder Pro:hon. CalcBuilder Pro on tehokas no-code alusta ammattilaisten laskureiden luomiseen.',
        features:
          'Mit칛 voit tehd칛:\n游꿢 Luo laskureita ved칛 ja pudota -toiminnolla\n游꿛 Mukauta ulkoasua ja br칛nd칛yst칛\n游댕 Upota laskureita verkkosivuille\n游늵 Seuraa k칛ytt칬칛 analytiikalla',
        callToAction: 'Aloita nyt kirjautumalla sis칛칛n ja luomalla ensimm칛inen laskurisi.',
        footer:
          'CalcBuilder Pro - Laskurigeneraattori ammattilaisille\nSupport: support@calcbuilder.com',
      },
      en: {
        greeting: `Hi ${userName}!`,
        body: "We're excited to have you join CalcBuilder Pro. CalcBuilder Pro is a powerful no-code platform for creating professional calculators.",
        features:
          'What you can do:\n游꿢 Create calculators with drag & drop\n游꿛 Customize appearance and branding\n游댕 Embed calculators on websites\n游늵 Track usage with analytics',
        callToAction: 'Get started now by logging in and creating your first calculator.',
        footer:
          'CalcBuilder Pro - Calculator Generator for Professionals\nSupport: support@calcbuilder.com',
      },
      sv: {
        greeting: `Hej ${userName}!`,
        body: 'Vi 칛r glada att du gick med i CalcBuilder Pro. CalcBuilder Pro 칛r en kraftfull no-code-plattform f칬r att skapa professionella kalkylatorer.',
        features:
          'Vad du kan g칬ra:\n游꿢 Skapa kalkylatorer med dra och sl칛pp\n游꿛 Anpassa utseende och varum칛rke\n游댕 B칛dda in kalkylatorer p친 webbplatser\n游늵 Sp친ra anv칛ndning med analys',
        callToAction: 'Kom ig친ng nu genom att logga in och skapa din f칬rsta kalkylator.',
        footer: 'CalcBuilder Pro - Kalkylgenerator f칬r proffs\nSupport: support@calcbuilder.com',
      },
    };

    const lang = content[language as keyof typeof content] || content.fi;

    return `${lang.greeting}\n\n${lang.body}\n\n${lang.features}\n\n${lang.callToAction}\n\n${
      lang.footer
    }`;
  }

  /**
   * Generate plain text version of verification email
   */
  private static generateVerificationTextVersion(props: EmailVerificationProps): string {
    const { userName, verificationUrl, expiresIn = '24 hours', language = 'fi' } = props;

    const content = {
      fi: {
        greeting: `Hei ${userName}!`,
        body: 'Kiitos, ett칛 rekister칬idyit CalcBuilder Pro:hon! Vahvista s칛hk칬postiosoitteesi klikkaamalla alla olevaa linkki칛.',
        verification: `Vahvista s칛hk칬posti: ${verificationUrl}`,
        expiration: `T칛m칛 linkki vanhenee ${expiresIn} kuluttua.`,
        security: 'Turvallisuussyist칛 칛l칛 jaa t칛t칛 linkki칛 kenenk칛칛n kanssa.',
        footer:
          'CalcBuilder Pro - Laskurigeneraattori ammattilaisille\nSupport: support@calcbuilder.com',
      },
      en: {
        greeting: `Hi ${userName}!`,
        body: 'Thank you for signing up for CalcBuilder Pro! Please verify your email address by clicking the link below.',
        verification: `Verify Email: ${verificationUrl}`,
        expiration: `This link expires in ${expiresIn}.`,
        security: 'For security reasons, do not share this link with anyone.',
        footer:
          'CalcBuilder Pro - Calculator Generator for Professionals\nSupport: support@calcbuilder.com',
      },
      sv: {
        greeting: `Hej ${userName}!`,
        body: 'Tack f칬r att du registrerade dig f칬r CalcBuilder Pro! V칛nligen verifiera din e-postadress genom att klicka p친 l칛nken nedan.',
        verification: `Verifiera e-post: ${verificationUrl}`,
        expiration: `Den h칛r l칛nken g친r ut om ${expiresIn}.`,
        security: 'Av s칛kerhetssk칛l, dela inte den h칛r l칛nken med n친gon.',
        footer: 'CalcBuilder Pro - Kalkylgenerator f칬r proffs\nSupport: support@calcbuilder.com',
      },
    };

    const lang = content[language as keyof typeof content] || content.fi;

    return `${lang.greeting}\n\n${lang.body}\n\n${lang.verification}\n\n${
      lang.expiration
    }\n\n${lang.security}\n\n${lang.footer}`;
  }

  /**
   * Generate plain text version of password reset email
   */
  private static generatePasswordResetTextVersion(props: PasswordResetProps): string {
    const { userName, resetUrl, expiresIn = '1 hour', language = 'fi' } = props;

    const content = {
      fi: {
        greeting: `Hei ${userName}!`,
        body: 'Olet pyyt칛nyt salasanasi nollaamista CalcBuilder Pro -tilillesi. Klikkaa alla olevaa linkki칛 nollataksesi salasanasi.',
        reset: `Nollaa salasana: ${resetUrl}`,
        expiration: `T칛m칛 linkki vanhenee ${expiresIn} kuluttua.`,
        security: 'Turvallisuussyist칛 칛l칛 jaa t칛t칛 linkki칛 kenenk칛칛n kanssa.',
        footer:
          'CalcBuilder Pro - Laskurigeneraattori ammattilaisille\nSupport: support@calcbuilder.com',
      },
      en: {
        greeting: `Hi ${userName}!`,
        body: 'You have requested to reset your password for your CalcBuilder Pro account. Click the link below to reset your password.',
        reset: `Reset Password: ${resetUrl}`,
        expiration: `This link expires in ${expiresIn}.`,
        security: 'For security reasons, do not share this link with anyone.',
        footer:
          'CalcBuilder Pro - Calculator Generator for Professionals\nSupport: support@calcbuilder.com',
      },
      sv: {
        greeting: `Hej ${userName}!`,
        body: 'Du har beg칛rt att 친terst칛lla ditt l칬senord f칬r ditt CalcBuilder Pro-konto. Klicka p친 l칛nken nedan f칬r att 친terst칛lla ditt l칬senord.',
        reset: `칀terst칛ll l칬senord: ${resetUrl}`,
        expiration: `Den h칛r l칛nken g친r ut om ${expiresIn}.`,
        security: 'Av s칛kerhetssk칛l, dela inte den h칛r l칛nken med n친gon.',
        footer: 'CalcBuilder Pro - Kalkylgenerator f칬r proffs\nSupport: support@calcbuilder.com',
      },
    };

    const lang = content[language as keyof typeof content] || content.fi;

    return `${lang.greeting}\n\n${lang.body}\n\n${lang.reset}\n\n${
      lang.expiration
    }\n\n${lang.security}\n\n${lang.footer}`;
  }
}

// Export individual functions for convenience
export const sendWelcomeEmail = EmailRenderer.sendWelcomeEmail.bind(EmailRenderer);
export const sendVerificationEmail = EmailRenderer.sendVerificationEmail.bind(EmailRenderer);
export const sendPasswordResetEmail = EmailRenderer.sendPasswordResetEmail.bind(EmailRenderer);
export const renderTemplate = EmailRenderer.renderTemplate.bind(EmailRenderer);
