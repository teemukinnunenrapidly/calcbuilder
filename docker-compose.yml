services:
  # Next.js Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev # Use dev stage for development
    container_name: calcbuilder-frontend
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL:-http://localhost:8000}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@supabase-local:5432/postgres}
    working_dir: /app
    command: npm run dev
    networks:
      - calcbuilder-network
    depends_on:
      - nginx
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: calcbuilder-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - calcbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Supabase Local Development (Optional - for offline development)
  supabase-local:
    image: supabase/postgres:15.1.0.117
    container_name: calcbuilder-supabase-local
    environment:
      POSTGRES_PASSWORD: ${SUPABASE_LOCAL_DB_PASSWORD:-postgres}
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    ports:
      - '5432:5432'
    volumes:
      - supabase-data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    networks:
      - calcbuilder-network
    restart: unless-stopped
    profiles:
      - local-dev # Only start when explicitly requested
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: calcbuilder-redis
    ports:
      - '6379:6379'
      - '8025:8025'
    volumes:
      - redis-data:/data
    networks:
      - calcbuilder-network
    restart: unless-stopped
    profiles:
      - local-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Mailhog for email testing (optional)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: calcbuilder-mailhog
    ports:
      - '1025:1025' # SMTP
      - '8025:8025' # Web UI
    networks:
      - calcbuilder-network
    restart: unless-stopped
    profiles:
      - local-dev
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  supabase-data:
    driver: local
  redis-data:
    driver: local

networks:
  calcbuilder-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
